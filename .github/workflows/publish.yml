name: Publish

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Check if package version exists
      run: |
        cat NameComparisonToolkit/NameComparisonToolkit.csproj
        PACKAGE_VERSION=$(sed -n 's:.*<Version>\(.*\)</Version>.*:\1:p' NameComparisonToolkit/NameComparisonToolkit.csproj)
        if [ -z "$PACKAGE_VERSION" ]; then
          echo "Error: Failed to extract package version from NameComparisonToolkit.csproj"
          exit 1
        fi

        RESULT=$(dotnet nuget search NameComparisonToolkit --prerelease --source https://api.nuget.org/v3/index.json --take 1000 | grep -c "$PACKAGE_VERSION")
        if [ "$RESULT" -gt 0 ]; then
          echo "PACKAGE_VERSION_EXISTS=1" >> $GITHUB_ENV
        else
          echo "PACKAGE_VERSION_EXISTS=0" >> $GITHUB_ENV
        fi

    - name: Fail if package version exists
      if: env.PACKAGE_VERSION_EXISTS != '0'
      run: |
        echo "Error: Package version already exists on NuGet"
        exit 1

    - name: Publish
      run: dotnet nuget push "**/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        DOTNET_CLI_TELEMETRY_OPTOUT: true
